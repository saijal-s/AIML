def row_win(board,player):
  for i in range(len(board)):
    flag=1
    for j in range(len(board)):
      if board[i][j]!=player:
        flag=0
        break
    if flag==1:
      return flag
  return flag
def col_win(board,player):
  for i in range(len(board)):
    flag=1
    for j in range(len(board)):
      if board[j][i]!=player:
        flag=0
        break
    if flag==1:
      return 1
  return flag
def diag_win(board,player):
  flag=1
  for i in range(len(board)):
    if board[i][i]!=player:
      flag=0
      break
  if flag==1:
    return 1
  flag=1
  for i in range(len(board)):
    j=len(board)-i-1
    if board[i][j]!=player:
      flag=0
      break
  return flag
def whowin(board,player):
  for i in player:
    if row_win(board,i) or col_win(board,i) or diag_win(board,i):
      return i
  flag=0
  for i in board:
  if 0 in i:
    flag=1
    break
  if flag==0:
    return -1
  return 0
  
import random
def available(board):
  cell=[]

  for i in range(len(board)):
  for j in range(len(board)):
    if board[i][j]==0:
      cell.append((i,j))
  return cell
def randomplay(board,k):
  ran=available(board)
  cell=random.choice(ran)
  board[cell[0]][cell[1]]=k
  return board
board=[[0 for i in range(3)]for j in range(3)]
count=0
player=[1,2]
winner=0
while winner==0:
  for k in player:
    print("Board during count ",count)
    print(board)
    board=randomplay(board,k)
    winner=whowin(board,player)
    if winner!=0:
      break
    count +=1
print("Board during count ",count+1)
print(board)
if winner!=-1:
  print("winner is ",winner)
else:
  print("draw")
